name: Nightly Build and Test

on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * *"
 
permissions: {}

concurrency:
  group: ${{ github.workflow }} @ ${{ github.ref }}
  cancel-in-progress: true

env:
  PEKKO_TEST_TIMEFACTOR: 10.0
  EVENT_NAME: ${{ github.event_name }}

jobs:
  compile-and-test:
    name: Build and Test
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        SCALA_VERSION: [2.12, 2.13, 3]
        JDK: [8]
        PEKKO_VERSION: ['main', '1.0.x']
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Set up JDK ${{ matrix.JDK }}
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: temurin
          java-version: ${{ matrix.JDK }}

      - name: Install sbt
        uses: sbt/setup-sbt@6c68d2fe8dfbc0a0534d70101baa2e0420e1a506 # v1.1.9

      - name: Cache Coursier cache
        uses: coursier/cache-action@4e2615869d13561d626ed48655e1a39e5b192b3c # v6.4.7

      - name: Cache Build Target
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: project/**/target
          key: build-target-${{ hashFiles('**/*.sbt', 'project/build.properties', 'project/**/*.scala') }}

      - name: Compile everything
        run: sbt -Dpekko.build.pekko.version=${{ matrix.PEKKO_VERSION }} "++ ${{ matrix.SCALA_VERSION }}" Test/compile

      - name: Run all tests JDK ${{ matrix.JDK }}, Scala ${{ matrix.SCALA_VERSION }}, Pekko ${{ matrix.PEKKO_VERSION }}
        run: sbt -Dpekko.build.pekko.version=${{ matrix.PEKKO_VERSION }} "++ ${{ matrix.SCALA_VERSION }} test"

      - name: Print logs on failure
        if: ${{ failure() }}
        run: find . -name "*.log" -exec ./scripts/cat-log.sh {} \;
  integration-test:
    name: Integration tests
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        PEKKO_VERSION: ['main', '1.0.x']
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Java 8
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: temurin
          java-version: 8

      - name: Install sbt
        uses: sbt/setup-sbt@6c68d2fe8dfbc0a0534d70101baa2e0420e1a506 # v1.1.9

      - name: Cache Coursier cache
        uses: coursier/cache-action@4e2615869d13561d626ed48655e1a39e5b192b3c # v6.4.7

      - name: Cache Build Target
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: project/**/target
          key: build-target-${{ hashFiles('**/*.sbt', 'project/build.properties', 'project/**/*.scala') }}

      - name: Compile everything
        run: sbt -Dpekko.build.pekko.version=${{ matrix.PEKKO_VERSION }} "++ ${{ matrix.SCALA_VERSION }}" int-tests/compile

      - name: Run multi-broker and long running integration tests
        run: sbt -Dpekko.build.pekko.version=${{ matrix.PEKKO_VERSION }} "int-tests/test"

      - name: Print logs on failure
        if: ${{ failure() }}
        run: find . -name "*.log" -exec ./scripts/cat-log.sh {} \;
